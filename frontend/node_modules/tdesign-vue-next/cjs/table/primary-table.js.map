{"version":3,"file":"primary-table.js","sources":["../../src/table/primary-table.tsx"],"sourcesContent":["import { computed, defineComponent, toRefs, h, ref, onMounted, getCurrentInstance } from 'vue';\nimport get from 'lodash/get';\nimport omit from 'lodash/omit';\nimport baseTableProps from './base-table-props';\nimport primaryTableProps from './primary-table-props';\nimport BaseTable from './base-table';\nimport { useTNodeJSX } from '../hooks/tnode';\nimport useColumnController from './hooks/useColumnController';\nimport useRowExpand from './hooks/useRowExpand';\nimport useTableHeader, { renderTitle } from './hooks/useTableHeader';\nimport useRowSelect from './hooks/useRowSelect';\nimport { TdPrimaryTableProps, PrimaryTableCol, TableRowData, PrimaryTableCellParams } from './type';\nimport useSorter from './hooks/useSorter';\nimport useFilter from './hooks/useFilter';\nimport useDragSort from './hooks/useDragSort';\nimport useAsyncLoading from './hooks/useAsyncLoading';\nimport EditableCell, { EditableCellProps } from './editable-cell';\nimport { PageInfo } from '../pagination';\nimport useClassName from './hooks/useClassName';\nimport { useConfig } from '../hooks/useConfig';\nimport useEditableRow from './hooks/useEditableRow';\nimport useStyle from './hooks/useStyle';\nimport { ScrollToElementParams } from '../hooks/useVirtualScrollNew';\nimport { BaseTableProps } from './interface';\n\nexport { BASE_TABLE_ALL_EVENTS } from './base-table';\n\nconst OMIT_PROPS = [\n  'hideSortTips',\n  'dragSort',\n  'defaultExpandedRowKeys',\n  'defaultSelectedRowKeys',\n  'columnController',\n  'filterRow',\n  'sortOnRowDraggable',\n  'expandOnRowClick',\n  'expand-on-row-click',\n  'expanded-row',\n  'editable-row-keys',\n  'editable-cell-state',\n  'filter-value',\n  'multipleSort',\n  'expandIcon',\n  'expand-icon',\n  'reserveSelectedRowOnPaginate',\n  'expandedRowKeys',\n  'expandedRow',\n  'reserve-selected-row-on-paginate',\n  'reserveSelectedRowOnPaginate',\n  'selected-row-keys',\n  'selectedRowKeys',\n  'selectOnRowClick',\n  'column-controller',\n  'columnController',\n  'dragSort',\n  'drag-sort',\n  'hideSortTips',\n  'showSortColumnBgColor',\n  'filter-row',\n  'filterRow',\n  'multiple-sort',\n  'multipleSort',\n  'async-loading',\n  'onChange',\n  'onAsyncLoadingClick',\n  'onColumnChange',\n  'onColumnControllerVisibleChange',\n  'onDataChange',\n  'onDisplayColumnsChange',\n  'onDragSort',\n  'onExpandChange',\n  'onFilterChange',\n  'onSelectChange',\n  'onSortChange',\n];\n\nexport default defineComponent({\n  name: 'TPrimaryTable',\n\n  props: {\n    ...baseTableProps,\n    ...primaryTableProps,\n  },\n\n  setup(props, context) {\n    const renderTNode = useTNodeJSX();\n    const { columns, columnController } = toRefs(props);\n    const primaryTableRef = ref(null);\n    const showElement = ref(false);\n\n    const { classPrefix, tableDraggableClasses, tableBaseClass, tableSelectedClasses, tableSortClasses } =\n      useClassName();\n    const { globalConfig } = useConfig('table', props.locale);\n    const { sizeClassNames } = useStyle(props);\n    const tableSize = computed(() => props.size ?? globalConfig.value.size);\n    // 自定义列配置功能\n    const { tDisplayColumns, renderColumnController } = useColumnController(props, context);\n\n    // 展开/收起行功能\n    const {\n      showExpandedRow,\n      showExpandIconColumn,\n      getExpandColumn,\n      renderExpandedRow,\n      onInnerExpandRowClick,\n      getExpandedRowClass,\n    } = useRowExpand(props, context);\n\n    // 排序功能\n    const { renderSortIcon } = useSorter(props, context);\n\n    // 行选中功能\n    const {\n      selectColumn,\n      showRowSelect,\n      selectedRowClassNames,\n      currentPaginateData,\n      formatToRowSelectColumn,\n      setTSelectedRowKeys,\n      onInnerSelectRowClick,\n      handleRowSelectWithAreaSelection,\n    } = useRowSelect(props, tableSelectedClasses);\n\n    // 过滤功能\n    const {\n      hasEmptyCondition,\n      isTableOverflowHidden,\n      renderFilterIcon,\n      renderFirstFilterRow,\n      setFilterPrimaryTableRef,\n    } = useFilter(props, context);\n\n    // 拖拽排序功能\n    const dragSortParams = computed(() => ({\n      showElement: showElement.value,\n    }));\n    const {\n      isRowHandlerDraggable,\n      isRowDraggable,\n      isColDraggable,\n      innerPagination,\n      setDragSortPrimaryTableRef,\n      setDragSortColumns,\n    } = useDragSort(props, context, dragSortParams);\n\n    const { renderTitleWidthIcon } = useTableHeader(props);\n    const { renderAsyncLoading } = useAsyncLoading(props);\n\n    // 可编辑行\n    const {\n      errorListMap,\n      editableKeysMap,\n      validateRowData,\n      validateTableData,\n      onRuleChange,\n      clearValidateData,\n      onUpdateEditedCell,\n      getEditRowData,\n      onPrimaryTableCellEditChange,\n    } = useEditableRow(props);\n\n    const innerKeyboardRowHover = computed(() => Boolean(showExpandedRow.value || showRowSelect.value));\n\n    const innerDisableSpaceInactiveRow = computed(() => Boolean(showExpandedRow.value || showRowSelect.value));\n\n    const primaryTableClasses = computed(() => {\n      return {\n        [tableDraggableClasses.colDraggable]: isColDraggable.value,\n        [tableDraggableClasses.rowHandlerDraggable]: isRowHandlerDraggable.value,\n        [tableDraggableClasses.rowDraggable]: isRowDraggable.value,\n        [tableBaseClass.overflowVisible]: isTableOverflowHidden.value === false,\n        [tableBaseClass.tableRowEdit]: props.editableRowKeys,\n        [`${classPrefix}-table--select-${selectColumn.value?.type}`]: selectColumn.value,\n        [`${classPrefix}-table--row-select`]: showRowSelect.value,\n        [`${classPrefix}-table--row-expandable`]: showExpandedRow.value,\n      };\n    });\n\n    // 如果想给 TR 添加类名，请在这里补充，不要透传更多额外 Props 到 BaseTable\n    const tRowClassNames = computed(() => {\n      const tClassNames = [props.rowClassName, selectedRowClassNames.value, getExpandedRowClass];\n      return tClassNames.filter((v) => v);\n    });\n\n    // 如果想给 TR 添加属性，请在这里补充，不要透传更多额外 Props 到 BaseTable\n    const tRowAttributes = computed(() => {\n      const tAttributes = [props.rowAttributes];\n      if (isRowHandlerDraggable.value || isRowDraggable.value) {\n        tAttributes.push(({ row }) => ({ 'data-id': get(row, props.rowKey || 'id') }));\n      }\n      return tAttributes.filter((v) => v);\n    });\n\n    // 多个 Hook 共用 primaryTableRef\n    onMounted(() => {\n      setFilterPrimaryTableRef(primaryTableRef.value);\n      setDragSortPrimaryTableRef(primaryTableRef.value);\n    });\n\n    // 对外暴露的方法\n    context.expose({\n      validateRowData,\n      validateTableData,\n      clearValidateData,\n      refreshTable: () => {\n        primaryTableRef.value.refreshTable();\n      },\n      scrollToElement: (data: ScrollToElementParams) => {\n        primaryTableRef.value.scrollToElement(data);\n      },\n      scrollColumnIntoView: (colKey: string) => {\n        primaryTableRef.value.scrollColumnIntoView(colKey);\n      },\n      // 暴露基础表格 ref 及相关方法\n      baseTableRef: primaryTableRef,\n    });\n\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    const onEditableCellChange: EditableCellProps['onChange'] = (params) => {\n      props.onRowEdit?.(params);\n      const rowValue = get(params.editedRow, props.rowKey || 'id');\n      onUpdateEditedCell(rowValue, params.row, {\n        [params.col.colKey]: params.value,\n      });\n    };\n\n    // 1. 影响列数量的因素有：自定义列配置、展开/收起行、多级表头；2. 影响表头内容的因素有：排序图标、筛选图标\n    const getColumns = (columns: PrimaryTableCol<TableRowData>[], parentDisplay = false) => {\n      const arr: PrimaryTableCol<TableRowData>[] = [];\n      for (let i = 0, len = columns.length; i < len; i++) {\n        let item = { ...columns[i] };\n        // 自定义列显示控制\n        const isDisplayColumn = item.children?.length || tDisplayColumns.value?.includes(item.colKey);\n        if (\n          !isDisplayColumn &&\n          (props.columnController || props.displayColumns || props.defaultDisplayColumns) &&\n          !parentDisplay\n        )\n          continue;\n        item = formatToRowSelectColumn(item);\n        const { sort } = props;\n        if (item.sorter && props.showSortColumnBgColor) {\n          const sorts = sort instanceof Array ? sort : [sort];\n          const sortedColumn = sorts.find(\n            (sort) => sort && sort.sortBy === item.colKey && sort.descending !== undefined,\n          );\n          if (sortedColumn) {\n            item.className =\n              item.className instanceof Array\n                ? item.className.concat(tableSortClasses.sortColumn)\n                : [item.className, tableSortClasses.sortColumn];\n          }\n        }\n        // 添加排序图标和过滤图标\n        if (item.sorter || item.filter) {\n          const titleContent = renderTitle(context.slots, item, i);\n          const { ellipsisTitle } = item;\n          item.title = (h, p) => {\n            const sortIcon = item.sorter ? renderSortIcon(p) : null;\n            const filterIcon = item.filter ? renderFilterIcon(p) : null;\n            // @ts-ignore 注意：此处 Vue2 和 Vue3 有所不同\n            const attach = primaryTableRef.value?.tableContentRef;\n            return renderTitleWidthIcon(\n              [titleContent, sortIcon, filterIcon],\n              p.col,\n              p.colIndex,\n              ellipsisTitle,\n              attach,\n              {\n                classPrefix,\n                ellipsisOverlayClassName: tableSize.value !== 'medium' ? sizeClassNames[tableSize.value] : '',\n              },\n            );\n          };\n          item.ellipsisTitle = false;\n        }\n        // 如果是单元格可编辑状态\n        if (item.edit?.component) {\n          const oldCell = item.cell;\n          item.cell = (h, p: PrimaryTableCellParams<TableRowData>) => {\n            const cellProps: EditableCellProps = {\n              ...p,\n              row: getEditRowData(p),\n              oldCell,\n              rowKey: props.rowKey || 'id',\n              tableBaseClass,\n              cellEmptyContent: props.cellEmptyContent,\n              onChange: onEditableCellChange,\n              onValidate: props.onRowValidate,\n              onRuleChange,\n              onEditableChange: onPrimaryTableCellEditChange,\n            };\n            if (props.editableRowKeys) {\n              const rowValue = get(p.row, props.rowKey || 'id');\n              cellProps.editable = editableKeysMap.value[rowValue] || false;\n              const key = [rowValue, p.col.colKey].join('__');\n              const errorList = errorListMap.value?.[key];\n              errorList && (cellProps.errors = errorList);\n            }\n            if (props.editableCellState) {\n              cellProps.readonly = !props.editableCellState(p);\n            }\n            return <EditableCell {...cellProps} v-slots={context.slots} onUpdateEditedCell={onUpdateEditedCell} />;\n          };\n        }\n        if (item.children?.length) {\n          item.children = getColumns(item.children, parentDisplay || tDisplayColumns.value?.includes(item.colKey));\n        }\n        // 多级表头和自定义列配置特殊逻辑：要么子节点不存在，要么子节点长度大于 1，方便做自定义列配置\n        if (!item.children || item.children?.length) {\n          arr.push(item);\n        }\n      }\n      return arr;\n    };\n\n    const tColumns = computed(() => {\n      const cols = getColumns(columns.value);\n      if (showExpandIconColumn.value) {\n        cols.unshift(getExpandColumn());\n      }\n      return cols;\n    });\n\n    const onInnerPageChange = (pageInfo: PageInfo, newData: Array<TableRowData>) => {\n      innerPagination.value = { ...innerPagination.value, ...pageInfo };\n      currentPaginateData.value = newData;\n      props.onPageChange?.(pageInfo, newData);\n      const changeParams: Parameters<TdPrimaryTableProps['onChange']> = [\n        { pagination: pageInfo },\n        { trigger: 'pagination', currentData: newData },\n      ];\n      props.onChange?.(...changeParams);\n      // 是否在分页时保留选中结果，如果不保留则需清空\n      if (!props.reserveSelectedRowOnPaginate) {\n        setTSelectedRowKeys([], {\n          selectedRowData: [],\n          type: 'uncheck',\n          currentRowKey: 'CLEAR_ON_PAGINATE',\n        });\n      }\n    };\n\n    const onInnerActiveRowAction: BaseTableProps['onActiveRowAction'] = (params) => {\n      props.onActiveRowAction?.(params);\n      handleRowSelectWithAreaSelection(params);\n    };\n\n    const onSingleRowClick: TdPrimaryTableProps['onRowClick'] = (params) => {\n      if (props.expandOnRowClick) {\n        onInnerExpandRowClick(params);\n      }\n      if (props.selectOnRowClick) {\n        onInnerSelectRowClick(params);\n      }\n    };\n\n    // handle click and dblclick exits at the same time\n    let timer: any;\n    const DURATION = 250;\n    const onInnerRowClick: TdPrimaryTableProps['onRowClick'] = (params) => {\n      // no dbl click conflict, no delay\n      if (!props.onRowDblclick) {\n        onSingleRowClick(params);\n        return;\n      }\n      if (timer) {\n        // dblclick\n        clearTimeout(timer);\n        timer = undefined;\n      } else {\n        timer = setTimeout(() => {\n          onSingleRowClick(params);\n          timer = undefined;\n        }, DURATION);\n      }\n    };\n\n    const onShowElementChange = (val: boolean) => {\n      showElement.value = val;\n    };\n\n    return () => {\n      const formatNode = (\n        api: string,\n        renderInnerNode: Function,\n        condition: boolean,\n        extra?: { reverse?: boolean },\n      ) => {\n        if (!condition) return props[api];\n        const innerNode = renderInnerNode(h);\n        const propsNode = renderTNode(api);\n        if (innerNode && !propsNode) return () => innerNode;\n        if (propsNode && !innerNode) return () => propsNode;\n        if (innerNode && propsNode) {\n          return () =>\n            extra?.reverse ? (\n              <div>\n                {innerNode}\n                {propsNode}\n              </div>\n            ) : (\n              <div>\n                {propsNode}\n                {innerNode}\n              </div>\n            );\n        }\n        return null;\n      };\n      const isColumnController = !!(columnController.value && Object.keys(columnController.value).length);\n      // @ts-ignore\n      const placement = isColumnController ? columnController.value.placement || 'top-right' : '';\n      const isBottomController = isColumnController && placement?.indexOf('bottom') !== -1;\n      const topContent = formatNode('topContent', renderColumnController, isColumnController && !isBottomController);\n      const bottomContent = formatNode('bottomContent', renderColumnController, isBottomController, {\n        reverse: true,\n      });\n      const firstFullRow = formatNode('firstFullRow', renderFirstFilterRow, !hasEmptyCondition.value);\n      const lastFullRow = formatNode('lastFullRow', renderAsyncLoading, !!props.asyncLoading);\n\n      // important for base-table controlled properties\n      const { vnode } = getCurrentInstance();\n\n      const baseTableProps: BaseTableProps = {\n        ...omit(vnode.props, OMIT_PROPS),\n        rowKey: props.rowKey,\n        rowClassName: tRowClassNames.value,\n        rowAttributes: tRowAttributes.value,\n        columns: tColumns.value,\n        keyboardRowHover: props.keyboardRowHover ?? innerKeyboardRowHover.value,\n        disableSpaceInactiveRow: props.disableSpaceInactiveRow ?? innerDisableSpaceInactiveRow.value,\n        topContent,\n        bottomContent,\n        firstFullRow,\n        lastFullRow,\n        thDraggable: ['col', 'row-handler-col'].includes(props.dragSort),\n        onShowElementChange,\n        onPageChange: onInnerPageChange,\n        renderExpandedRow: showExpandedRow.value ? renderExpandedRow : undefined,\n        onActiveRowAction: onInnerActiveRowAction,\n      };\n\n      if (props.expandOnRowClick || props.selectOnRowClick) {\n        baseTableProps.onRowClick = onInnerRowClick;\n      }\n\n      return (\n        <BaseTable\n          v-slots={context.slots}\n          {...baseTableProps}\n          ref={primaryTableRef}\n          class={primaryTableClasses.value}\n          onLeafColumnsChange={setDragSortColumns}\n        />\n      );\n    };\n  },\n});\n"],"names":["OMIT_PROPS","defineComponent","name","props","_objectSpread","baseTableProps","primaryTableProps","setup","context","renderTNode","useTNodeJSX","_toRefs","toRefs","columns","columnController","primaryTableRef","ref","showElement","_useClassName","useClassName","classPrefix","tableDraggableClasses","tableBaseClass","tableSelectedClasses","tableSortClasses","_useConfig","useConfig","locale","globalConfig","_useStyle","useStyle","sizeClassNames","tableSize","computed","_props$size","size","value","_useColumnController","useColumnController","tDisplayColumns","renderColumnController","_useRowExpand","useRowExpand","showExpandedRow","showExpandIconColumn","getExpandColumn","renderExpandedRow","onInnerExpandRowClick","getExpandedRowClass","_useSorter","useSorter","renderSortIcon","_useRowSelect","useRowSelect","selectColumn","showRowSelect","selectedRowClassNames","currentPaginateData","formatToRowSelectColumn","setTSelectedRowKeys","onInnerSelectRowClick","handleRowSelectWithAreaSelection","_useFilter","useFilter","hasEmptyCondition","isTableOverflowHidden","renderFilterIcon","renderFirstFilterRow","setFilterPrimaryTableRef","dragSortParams","_useDragSort","useDragSort","isRowHandlerDraggable","isRowDraggable","isColDraggable","innerPagination","setDragSortPrimaryTableRef","setDragSortColumns","_useTableHeader","useTableHeader","renderTitleWidthIcon","_useAsyncLoading","useAsyncLoading","renderAsyncLoading","_useEditableRow","useEditableRow","errorListMap","editableKeysMap","validateRowData","validateTableData","onRuleChange","clearValidateData","onUpdateEditedCell","getEditRowData","onPrimaryTableCellEditChange","innerKeyboardRowHover","Boolean","innerDisableSpaceInactiveRow","primaryTableClasses","_selectColumn$value","_defineProperty","colDraggable","rowHandlerDraggable","rowDraggable","overflowVisible","tableRowEdit","editableRowKeys","concat","type","tRowClassNames","tClassNames","rowClassName","filter","v","tRowAttributes","tAttributes","rowAttributes","push","_ref2","row","get","rowKey","onMounted","expose","refreshTable","scrollToElement","data","scrollColumnIntoView","colKey","baseTableRef","onEditableCellChange","params","_props$onRowEdit","onRowEdit","call","rowValue","editedRow","col","getColumns","parentDisplay","arguments","length","undefined","arr","_loop","_item$children","_tDisplayColumns$valu","_item$edit","_item$children2","_item$children3","item","i","isDisplayColumn","children","includes","displayColumns","defaultDisplayColumns","sort","sorter","showSortColumnBgColor","sorts","Array","sortedColumn","find","sortBy","descending","className","sortColumn","titleContent","renderTitle","slots","_item","ellipsisTitle","title","h","p","_primaryTableRef$valu","sortIcon","filterIcon","attach","tableContentRef","colIndex","ellipsisOverlayClassName","edit","component","oldCell","cell","cellProps","cellEmptyContent","onChange","onValidate","onRowValidate","onEditableChange","_errorListMap$value","editable","key","join","errorList","errors","editableCellState","readonly","_createVNode","EditableCell","_mergeProps","_tDisplayColumns$valu2","len","tColumns","cols","unshift","onInnerPageChange","pageInfo","newData","_props$onPageChange","_props$onChange","onPageChange","changeParams","pagination","trigger","currentData","apply","reserveSelectedRowOnPaginate","selectedRowData","currentRowKey","onInnerActiveRowAction","_props$onActiveRowAct","onActiveRowAction","onSingleRowClick","expandOnRowClick","selectOnRowClick","timer","DURATION","onInnerRowClick","onRowDblclick","clearTimeout","setTimeout","onShowElementChange","val","_props$keyboardRowHov","_props$disableSpaceIn","formatNode","api","renderInnerNode","condition","extra","innerNode","propsNode","reverse","isColumnController","Object","keys","placement","isBottomController","indexOf","topContent","bottomContent","firstFullRow","lastFullRow","asyncLoading","_getCurrentInstance","getCurrentInstance","vnode","omit","keyboardRowHover","disableSpaceInactiveRow","thDraggable","dragSort","onRowClick","BaseTable"],"mappings":"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"}