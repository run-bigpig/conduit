/**
 * tdesign v1.10.6
 * (c) 2024 tdesign
 * @license MIT
 */

import { _ as _defineProperty } from '../../_chunks/dep-2cd917b7.mjs';
import { i as isFunction_1 } from '../../_chunks/dep-e38b198c.mjs';
import { i as isBoolean_1 } from '../../_chunks/dep-208ab852.mjs';
import { computed, nextTick } from 'vue';
import { d as dayjs } from '../../_chunks/dep-06adc476.mjs';
import { COMPONENT_NAME } from '../const.mjs';
import '../../hooks/useConfig.mjs';
import { useConfig } from '../../config-provider/useConfig.mjs';
import '../../_chunks/dep-b36c56dd.mjs';
import '../../_chunks/dep-c343de10.mjs';
import '../../_chunks/dep-5d6ad0f8.mjs';
import '../../_chunks/dep-05274cf8.mjs';
import '../../_chunks/dep-d10845aa.mjs';
import '../../_chunks/dep-b9904594.mjs';
import '../../_chunks/dep-5a707436.mjs';
import '../../_chunks/dep-bc6946b4.mjs';
import '../../_chunks/dep-a33ab1de.mjs';
import '../../_chunks/dep-653fadb3.mjs';
import '../../_chunks/dep-45bc846d.mjs';
import '../../_chunks/dep-2bcf3734.mjs';
import '../../_chunks/dep-5005acfb.mjs';
import '../../_chunks/dep-c7111b68.mjs';
import '../../_chunks/dep-aaf0a453.mjs';
import '../../_chunks/dep-4e9148a5.mjs';
import '../../_chunks/dep-754933cb.mjs';
import '../../_chunks/dep-6d263d27.mjs';
import '../../_chunks/dep-67e3536c.mjs';
import '../../_chunks/dep-0c393202.mjs';
import '../../_chunks/dep-da8c0faf.mjs';
import '../../_chunks/dep-5d631aa0.mjs';
import '../../_chunks/dep-eda9976d.mjs';
import '../../_chunks/dep-f03d2f0f.mjs';
import '../../_chunks/dep-94da3846.mjs';
import '../../_chunks/dep-5639eb7d.mjs';
import '../../_chunks/dep-28ab9e3e.mjs';
import '../../_chunks/dep-0d4a3f7e.mjs';
import '../../_chunks/dep-bd1b86d0.mjs';
import '../../_chunks/dep-37ea0644.mjs';
import '../../_chunks/dep-1d4985f2.mjs';
import '../../_chunks/dep-ace4b3db.mjs';
import '../../_common/js/global-config/default-config.mjs';
import '../../_common/js/global-config/locale/zh_CN.mjs';
import '../../_chunks/dep-5101fc98.mjs';
import '../../_chunks/dep-eb1a861a.mjs';
import '../../config-provider/type.mjs';

function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
var getDefaultControllerConfigData = function getDefaultControllerConfigData() {
  var visible = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;
  return {
    visible: visible,
    disabled: false,
    mode: {
      visible: true,
      radioGroupProps: {}
    },
    year: {
      visible: true,
      selectProps: {}
    },
    month: {
      visible: true,
      selectProps: {}
    },
    weekend: {
      visible: true,
      showWeekendButtonProps: {},
      hideWeekendButtonProps: {}
    },
    current: {
      visible: true,
      currentDayButtonProps: {},
      currentMonthButtonProps: {}
    }
  };
};
function userController(props, state) {
  var _useConfig = useConfig(COMPONENT_NAME),
    globalConfig = _useConfig.globalConfig;
  var options = computed(function () {
    var dayJsFilterDate = dayjs("".concat(state.curSelectedYear, "-").concat(state.curSelectedMonth));
    var re = {
      isShowWeekend: state.isShowWeekend,
      filterDate: dayJsFilterDate.toDate(),
      formattedFilterDate: dayJsFilterDate.format(props.format),
      mode: state.curSelectedMode
    };
    return re;
  });
  var configData = computed(function () {
    var _ref, _props$controllerConf;
    var controllerConfig = (_ref = (_props$controllerConf = props.controllerConfig) !== null && _props$controllerConf !== void 0 ? _props$controllerConf : globalConfig.value.controllerConfig) !== null && _ref !== void 0 ? _ref : true;
    if (isBoolean_1(controllerConfig)) {
      return getDefaultControllerConfigData(controllerConfig);
    }
    return _objectSpread(_objectSpread({}, getDefaultControllerConfigData()), controllerConfig);
  });
  var visible = computed(function () {
    return !!configData.value && configData.value.visible;
  });
  function checkControllerVisible(name) {
    var re = true;
    var conf = configData.value;
    if (!conf || !conf.visible || conf[name] === false || conf[name] && !conf[name].visible) {
      re = false;
    }
    return re;
  }
  function checkControllerDisabled(name, propsName) {
    var re = false;
    var conf = configData.value;
    if (conf && (conf.disabled || conf[name] && conf[name][propsName] && conf[name][propsName].disabled)) {
      re = true;
    }
    return re;
  }
  function emitControllerChange() {
    nextTick(function () {
      isFunction_1(props.onControllerChange) && props.onControllerChange(_objectSpread({}, options.value));
    });
  }
  return {
    options: options,
    configData: configData,
    visible: visible,
    checkControllerVisible: checkControllerVisible,
    checkControllerDisabled: checkControllerDisabled,
    emitControllerChange: emitControllerChange
  };
}

export { userController };
//# sourceMappingURL=useController.mjs.map
