/**
 * tdesign v1.10.6
 * (c) 2024 tdesign
 * @license MIT
 */

import { _ as _defineProperty } from '../../../_chunks/dep-2cd917b7.mjs';
import { isVNode, defineComponent, ref, watch, createVNode } from 'vue';
import '../../../_chunks/dep-c343de10.mjs';
import { _ as _createCompounder } from '../../../_chunks/dep-0d26b449.mjs';
import props from '../../props.mjs';
import { FORMATS } from '../../../_common/js/color-picker/constants.mjs';
import { Select, Option } from '../../../select/index.mjs';
import FormatInputs from './inputs.mjs';
import { useBaseClassName } from '../../hooks.mjs';
import '../../../_chunks/dep-b36c56dd.mjs';
import '../../../_chunks/dep-b1273bbc.mjs';
import '../../../_chunks/dep-5d6ad0f8.mjs';
import '../../../_chunks/dep-0c393202.mjs';
import '../../../_chunks/dep-da8c0faf.mjs';
import '../../../_chunks/dep-81a441b7.mjs';
import '../../../_chunks/dep-b9904594.mjs';
import '../../../select/select.mjs';
import '../../../_chunks/dep-62613491.mjs';
import '../../../_chunks/dep-769cdfcc.mjs';
import '../../../_chunks/dep-13773b3a.mjs';
import '../../../_chunks/dep-2ebd3a6b.mjs';
import '../../../_chunks/dep-b250efbd.mjs';
import '../../../_chunks/dep-99f6988f.mjs';
import '../../../_chunks/dep-ff82207a.mjs';
import '../../../_chunks/dep-653fadb3.mjs';
import '../../../_chunks/dep-45bc846d.mjs';
import '../../../_chunks/dep-e38b198c.mjs';
import '../../../_chunks/dep-05274cf8.mjs';
import '../../../_chunks/dep-d10845aa.mjs';
import '../../../_chunks/dep-2bcf3734.mjs';
import '../../../_chunks/dep-5005acfb.mjs';
import '../../../_chunks/dep-89404ad2.mjs';
import '../../../_chunks/dep-754933cb.mjs';
import '../../../_chunks/dep-6d263d27.mjs';
import '../../../_chunks/dep-5d631aa0.mjs';
import '../../../_chunks/dep-29715a4a.mjs';
import '../../../_chunks/dep-67e3536c.mjs';
import '../../../_chunks/dep-aaf0a453.mjs';
import '../../../_chunks/dep-78a897b3.mjs';
import '../../../_chunks/dep-94da3846.mjs';
import '../../../_chunks/dep-37ea0644.mjs';
import '../../../_chunks/dep-bd1b86d0.mjs';
import '../../../_chunks/dep-5094012f.mjs';
import '../../../_chunks/dep-98a67207.mjs';
import '../../../_chunks/dep-5a707436.mjs';
import '../../../_chunks/dep-bc6946b4.mjs';
import '../../../_chunks/dep-a33ab1de.mjs';
import '../../../_chunks/dep-c7111b68.mjs';
import '../../../_chunks/dep-4e9148a5.mjs';
import '../../../_chunks/dep-eda9976d.mjs';
import '../../../_chunks/dep-f03d2f0f.mjs';
import '../../../_chunks/dep-0df36f23.mjs';
import '../../../_chunks/dep-145a173e.mjs';
import '../../../_chunks/dep-0b5c77ed.mjs';
import '../../../_chunks/dep-e331b803.mjs';
import '../../../_chunks/dep-0d4a3f7e.mjs';
import '../../../common-components/fake-arrow.mjs';
import '../../../hooks/useConfig.mjs';
import '../../../config-provider/useConfig.mjs';
import '../../../_chunks/dep-5639eb7d.mjs';
import '../../../_chunks/dep-28ab9e3e.mjs';
import '../../../_chunks/dep-1d4985f2.mjs';
import '../../../_chunks/dep-ace4b3db.mjs';
import '../../../_common/js/global-config/default-config.mjs';
import '../../../_common/js/global-config/locale/zh_CN.mjs';
import '../../../_chunks/dep-5101fc98.mjs';
import '../../../_chunks/dep-06adc476.mjs';
import '../../../_chunks/dep-eb1a861a.mjs';
import '../../../config-provider/type.mjs';
import '../../../select-input/index.mjs';
import '../../../select-input/select-input.mjs';
import '../../../popup/index.mjs';
import '../../../popup/popup.mjs';
import '@popperjs/core';
import '../../../hooks/index.mjs';
import '../../../hooks/icon.mjs';
import '../../../hooks/slot.mjs';
import '../../../utils/render-tnode.mjs';
import '../../../_chunks/dep-fb32dbe0.mjs';
import '../../../_chunks/dep-9f3c7a03.mjs';
import '../../../_chunks/dep-8c4e0f42.mjs';
import '../../../_chunks/dep-5b0920c8.mjs';
import '../../../_chunks/dep-90feab0a.mjs';
import '../../../hooks/tnode.mjs';
import '../../../hooks/useCommonClassName.mjs';
import '../../../hooks/useDefaultValue.mjs';
import '../../../hooks/useDestroyOnClose.mjs';
import '../../../hooks/useKeepAnimation.mjs';
import '../../../hooks/useRipple.mjs';
import '../../../utils/set-style.mjs';
import '../../../hooks/useVirtualScroll.mjs';
import '../../../hooks/useVModel.mjs';
import '../../../hooks/useImagePreviewUrl.mjs';
import '../../../_common/js/upload/utils.mjs';
import '../../../_common/js/log/log.mjs';
import '../../../utils/dom.mjs';
import '../../../utils/easing.mjs';
import '../../../_common/js/utils/set-style.mjs';
import '../../../popup/container.mjs';
import '../../../popup/props.mjs';
import '../../../hooks/useResizeObserver.mjs';
import '../../../utils/withInstall.mjs';
import './style/css.mjs';
import '../../../popup/type.mjs';
import '../../../select-input/props.mjs';
import '../../../select-input/useSingle.mjs';
import '../../../input/index.mjs';
import '../../../input/input.mjs';
import 'tdesign-icons-vue-next';
import '../../../input/props.mjs';
import '../../../hooks/useDisabled.mjs';
import '../../../_chunks/dep-208ab852.mjs';
import '../../../hooks/useReadonly.mjs';
import '../../../hooks/useGlobalIcon.mjs';
import '../../../input/useInput.mjs';
import '../../../form/const.mjs';
import '../../../input/useLengthLimit.mjs';
import '../../../_common/js/log/index.mjs';
import '../../../_common/js/utils/helper.mjs';
import '../../../_chunks/dep-41afea2a.mjs';
import '../../../_chunks/dep-860543c8.mjs';
import '../../../_chunks/dep-be7755a9.mjs';
import '../../../input/useInputEventHandler.mjs';
import '../../../input/useInputWidth.mjs';
import '../../../input/input-group.mjs';
import '../../../input/input-group-props.mjs';
import '../../../input/type.mjs';
import '../../../loading/index.mjs';
import '../../../_chunks/dep-77ea84d8.mjs';
import '../../../_chunks/dep-1dda5d5d.mjs';
import '../../../_chunks/dep-4a6bdbd3.mjs';
import '../../../_chunks/dep-6502b585.mjs';
import '../../../loading/plugin.mjs';
import '../../../loading/loading.mjs';
import '../../../loading/icon/gradient.mjs';
import '../../../_common/js/loading/circle-adapter.mjs';
import '../../../loading/props.mjs';
import '../../../hooks/useTeleport.mjs';
import '../../../loading/type.mjs';
import '../../../select-input/useMultiple.mjs';
import '../../../tag-input/index.mjs';
import '../../../tag-input/tag-input.mjs';
import '../../../tag-input/props.mjs';
import '../../../tag-input/hooks/useTagScroll.mjs';
import '../../../tag-input/useTagList.mjs';
import '../../../tag/index.mjs';
import '../../../tag/tag.mjs';
import '../../../_chunks/dep-d6c61759.mjs';
import '../../../tag/props.mjs';
import '../../../tag/check-tag.mjs';
import '../../../tag/check-tag-props.mjs';
import '../../../_common/js/common.mjs';
import '../../../tag/check-tag-group.mjs';
import '../../../tag/check-tag-group-props.mjs';
import '../../../tag/type.mjs';
import '../../../tag-input/hooks/useHover.mjs';
import '../../../tag-input/hooks/useDragSorter.mjs';
import '../../../tag-input/type.mjs';
import '../../../select-input/useOverlayInnerStyle.mjs';
import '../../../select-input/type.mjs';
import '../../../select/select-panel.mjs';
import '../../../_chunks/dep-d2ce4e2b.mjs';
import '../../../_chunks/dep-78e0bb48.mjs';
import '../../../select/option.mjs';
import '../../../select/option-props.mjs';
import '../../../checkbox/index.mjs';
import '../../../checkbox/checkbox.mjs';
import '../../../checkbox/props.mjs';
import '../../../checkbox/constants.mjs';
import '../../../checkbox/hooks/useCheckboxLazyLoad.mjs';
import '../../../_common/js/utils/observe.mjs';
import '../../../checkbox/hooks/useKeyboardEvent.mjs';
import '../../../checkbox/group.mjs';
import '../../../checkbox/checkbox-group-props.mjs';
import '../../../checkbox/type.mjs';
import '../../../select/helper.mjs';
import '../../../select/optionGroup.mjs';
import '../../../select/option-group-props.mjs';
import '../../../select/props.mjs';
import '../../../select/hooks/usePanelVirtualScroll.mjs';
import '../../../select/hooks/useSelectOptions.mjs';
import '../../../select/hooks/useKeyboardControl.mjs';
import '../../../select/type.mjs';
import '../../../_chunks/dep-b523a7a1.mjs';
import '../../utils/index.mjs';
import '../../../_common/js/color-picker/index.mjs';
import '../../../_common/js/color-picker/cmyk.mjs';
import '../../../_common/js/color-picker/color.mjs';
import '../../../_chunks/dep-4a07c5ff.mjs';
import '../../../_common/js/color-picker/gradient.mjs';
import '../../../_common/js/color-picker/draggable.mjs';
import '../../../input-number/index.mjs';
import '../../../input-number/input-number.mjs';
import '../../../button/index.mjs';
import '../../../button/button.mjs';
import '../../../button/props.mjs';
import '../../../button/type.mjs';
import '../../../input-number/props.mjs';
import '../../../input-number/hooks/useInputNumber.mjs';
import '../../../_common/js/input-number/number.mjs';
import '../../../_common/js/input-number/large-number.mjs';
import '../../../input-number/type.mjs';
import './config.mjs';

var createCompounder = _createCompounder;

/**
 * Converts `string`, as space separated words, to upper case.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category String
 * @param {string} [string=''] The string to convert.
 * @returns {string} Returns the upper cased string.
 * @example
 *
 * _.upperCase('--foo-bar');
 * // => 'FOO BAR'
 *
 * _.upperCase('fooBar');
 * // => 'FOO BAR'
 *
 * _.upperCase('__foo_bar__');
 * // => 'FOO BAR'
 */
var upperCase = createCompounder(function (result, word, index) {
  return result + (index ? ' ' : '') + word.toUpperCase();
});
var upperCase_1 = upperCase;

function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
function _isSlot(s) {
  return typeof s === 'function' || Object.prototype.toString.call(s) === '[object Object]' && !isVNode(s);
}
var FormatPanel = defineComponent({
  name: "FormatPanel",
  inheritAttrs: false,
  props: _objectSpread(_objectSpread({}, props), {}, {
    color: {
      type: Object
    },
    onModeChange: {
      type: Function,
      "default": function _default() {
        return function () {};
      }
    },
    onInputChange: {
      type: Function,
      "default": function _default() {
        return function () {};
      }
    }
  }),
  setup: function setup(props2) {
    var baseClassName = useBaseClassName();
    var formatModel = ref(props2.format);
    watch(function () {
      return [props2.format];
    }, function () {
      return formatModel.value = props2.format;
    });
    var handleModeChange = function handleModeChange(v) {
      formatModel.value = v;
      props2.onModeChange(v);
    };
    return {
      formatModel: formatModel,
      baseClassName: baseClassName,
      handleModeChange: handleModeChange
    };
  },
  render: function render() {
    var _this = this;
    var _slot;
    var baseClassName = this.baseClassName,
      handleModeChange = this.handleModeChange;
    var newProps = _objectSpread(_objectSpread({}, this.$props), {}, {
      format: this.formatModel
    });
    var selectInputProps = _objectSpread({}, this.selectInputProps || {});
    return createVNode("div", {
      "class": "".concat(baseClassName, "__format")
    }, [createVNode("div", {
      "class": "".concat(baseClassName, "__format--item")
    }, [createVNode(Select, {
      "size": "small",
      "class": "".concat(baseClassName, "__format-mode-select"),
      "selectInputProps": _objectSpread({}, selectInputProps),
      "popupProps": _objectSpread({
        overlayClassName: "".concat(baseClassName, "__select-options")
      }, selectInputProps.popupProps),
      "modelValue": _this.formatModel,
      "onUpdate:modelValue": function onUpdateModelValue($event) {
        return _this.formatModel = $event;
      },
      "onChange": handleModeChange
    }, _isSlot(_slot = FORMATS.map(function (item) {
      return createVNode(Option, {
        "key": item,
        "value": item,
        "label": upperCase_1(item),
        "style": {
          fontSize: "12px"
        }
      }, null);
    })) ? _slot : {
      "default": function _default() {
        return [_slot];
      }
    })]), createVNode("div", {
      "class": "".concat(baseClassName, "__format--item")
    }, [createVNode(FormatInputs, newProps, null)])]);
  }
});

export { FormatPanel as default };
//# sourceMappingURL=index.mjs.map
