/**
 * tdesign v1.10.6
 * (c) 2024 tdesign
 * @license MIT
 */

import { _ as _defineProperty } from '../../_chunks/dep-2cd917b7.mjs';
import { defineComponent, ref, reactive, watch, onMounted, onBeforeUnmount, createVNode } from 'vue';
import { c as cloneDeep_1 } from '../../_chunks/dep-5a707436.mjs';
import { GRADIENT_SLIDER_DEFAULT_WIDTH } from '../../_common/js/color-picker/constants.mjs';
import '../utils/index.mjs';
import { InputNumber } from '../../input-number/index.mjs';
import { useBaseClassName } from '../hooks.mjs';
import { useCommonClassName } from '../../hooks/useConfig.mjs';
import baseProps from './base-props.mjs';
import { genGradientPoint, gradientColors2string } from '../../_common/js/color-picker/color.mjs';
import '../../_chunks/dep-b36c56dd.mjs';
import '../../_chunks/dep-c343de10.mjs';
import '../../_chunks/dep-bc6946b4.mjs';
import '../../_chunks/dep-a33ab1de.mjs';
import '../../_chunks/dep-653fadb3.mjs';
import '../../_chunks/dep-45bc846d.mjs';
import '../../_chunks/dep-e38b198c.mjs';
import '../../_chunks/dep-5d6ad0f8.mjs';
import '../../_chunks/dep-05274cf8.mjs';
import '../../_chunks/dep-d10845aa.mjs';
import '../../_chunks/dep-2bcf3734.mjs';
import '../../_chunks/dep-5005acfb.mjs';
import '../../_chunks/dep-c7111b68.mjs';
import '../../_chunks/dep-aaf0a453.mjs';
import '../../_chunks/dep-b9904594.mjs';
import '../../_chunks/dep-4e9148a5.mjs';
import '../../_chunks/dep-754933cb.mjs';
import '../../_chunks/dep-6d263d27.mjs';
import '../../_chunks/dep-67e3536c.mjs';
import '../../_chunks/dep-0c393202.mjs';
import '../../_chunks/dep-da8c0faf.mjs';
import '../../_chunks/dep-5d631aa0.mjs';
import '../../_chunks/dep-eda9976d.mjs';
import '../../_chunks/dep-f03d2f0f.mjs';
import '../../_chunks/dep-94da3846.mjs';
import '../../_common/js/color-picker/index.mjs';
import '../../_common/js/color-picker/cmyk.mjs';
import '../../_common/js/color-picker/draggable.mjs';
import '../../_chunks/dep-4a07c5ff.mjs';
import '../../_common/js/color-picker/gradient.mjs';
import '../../_chunks/dep-5639eb7d.mjs';
import '../../_chunks/dep-41afea2a.mjs';
import '../../_chunks/dep-d6c61759.mjs';
import '../../input-number/input-number.mjs';
import 'tdesign-icons-vue-next';
import '../../button/index.mjs';
import '../../button/button.mjs';
import '../../_chunks/dep-769cdfcc.mjs';
import '../../_chunks/dep-13773b3a.mjs';
import '../../loading/index.mjs';
import '../../_chunks/dep-77ea84d8.mjs';
import '../../_chunks/dep-28ab9e3e.mjs';
import '../../_chunks/dep-0d4a3f7e.mjs';
import '../../_chunks/dep-bd1b86d0.mjs';
import '../../_chunks/dep-37ea0644.mjs';
import '../../_chunks/dep-1d4985f2.mjs';
import '../../_chunks/dep-ace4b3db.mjs';
import '../../_common/js/global-config/default-config.mjs';
import '../../_common/js/global-config/locale/zh_CN.mjs';
import '../../_chunks/dep-5101fc98.mjs';
import '../../_chunks/dep-06adc476.mjs';
import '../../_chunks/dep-eb1a861a.mjs';
import '../../_chunks/dep-1dda5d5d.mjs';
import '../../_chunks/dep-0b5c77ed.mjs';
import '../../_chunks/dep-4a6bdbd3.mjs';
import '../../_chunks/dep-0df36f23.mjs';
import '../../_chunks/dep-ff82207a.mjs';
import '../../_chunks/dep-81a441b7.mjs';
import '../../_chunks/dep-b1273bbc.mjs';
import '../../_chunks/dep-29715a4a.mjs';
import '../../_chunks/dep-6502b585.mjs';
import '../../loading/plugin.mjs';
import '../../loading/loading.mjs';
import '../../_chunks/dep-b250efbd.mjs';
import '../../loading/icon/gradient.mjs';
import '../../_common/js/loading/circle-adapter.mjs';
import '../../_common/js/utils/set-style.mjs';
import '../../_common/js/utils/helper.mjs';
import '../../_chunks/dep-62613491.mjs';
import '../../_chunks/dep-860543c8.mjs';
import '../../_chunks/dep-be7755a9.mjs';
import '../../config-provider/useConfig.mjs';
import '../../config-provider/type.mjs';
import '../../utils/dom.mjs';
import '../../utils/easing.mjs';
import '../../utils/render-tnode.mjs';
import '../../_chunks/dep-fb32dbe0.mjs';
import '../../_chunks/dep-9f3c7a03.mjs';
import '../../_chunks/dep-8c4e0f42.mjs';
import '../../_chunks/dep-5b0920c8.mjs';
import '../../_chunks/dep-0d26b449.mjs';
import '../../_chunks/dep-90feab0a.mjs';
import '../../loading/props.mjs';
import '../../hooks/useTeleport.mjs';
import '../../utils/withInstall.mjs';
import './style/css.mjs';
import '../../loading/type.mjs';
import '../../button/props.mjs';
import '../../hooks/useRipple.mjs';
import '../../hooks/useKeepAnimation.mjs';
import '../../utils/set-style.mjs';
import '../../hooks/tnode.mjs';
import '../../hooks/useDisabled.mjs';
import '../../_chunks/dep-208ab852.mjs';
import '../../button/type.mjs';
import '../../input/index.mjs';
import '../../input/input.mjs';
import '../../input/props.mjs';
import '../../hooks/useReadonly.mjs';
import '../../hooks/useGlobalIcon.mjs';
import '../../input/useInput.mjs';
import '../../form/const.mjs';
import '../../hooks/index.mjs';
import '../../hooks/icon.mjs';
import '../../hooks/slot.mjs';
import '../../hooks/useCommonClassName.mjs';
import '../../hooks/useDefaultValue.mjs';
import '../../hooks/useDestroyOnClose.mjs';
import '../../hooks/useVirtualScroll.mjs';
import '../../hooks/useVModel.mjs';
import '../../hooks/useImagePreviewUrl.mjs';
import '../../_common/js/upload/utils.mjs';
import '../../_common/js/log/log.mjs';
import '../../input/useLengthLimit.mjs';
import '../../_common/js/log/index.mjs';
import '../../input/useInputEventHandler.mjs';
import '../../input/useInputWidth.mjs';
import '../../hooks/useResizeObserver.mjs';
import '../../input/input-group.mjs';
import '../../input/input-group-props.mjs';
import '../../input/type.mjs';
import '../../input-number/props.mjs';
import '../../input-number/hooks/useInputNumber.mjs';
import '../../_common/js/input-number/number.mjs';
import '../../_common/js/input-number/large-number.mjs';
import '../../input-number/type.mjs';

function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
var DELETE_KEYS = ["delete", "backspace"];
var LinearGradient = defineComponent({
  name: "LinearGradient",
  inheritAttrs: false,
  props: _objectSpread(_objectSpread({}, baseProps), {}, {
    enableMultipleGradient: {
      type: Boolean,
      "default": true
    }
  }),
  setup: function setup(props) {
    var baseClassName = useBaseClassName();
    var _useCommonClassName = useCommonClassName(),
      STATUS = _useCommonClassName.STATUS;
    var statusClassNames = STATUS.value;
    var refSlider = ref(null);
    var sliderRect = reactive({
      left: 0,
      width: GRADIENT_SLIDER_DEFAULT_WIDTH
    });
    var isDragging = ref(false);
    var isMoved = ref(false);
    var degree = ref(props.color.gradientDegree);
    var selectedId = ref(props.color.gradientSelectedId);
    var colors = ref(cloneDeep_1(props.color.gradientColors));
    watch(function () {
      return props.color.gradientDegree;
    }, function (value) {
      return degree.value = value;
    });
    watch(function () {
      return props.color.gradientSelectedId;
    }, function (value) {
      return selectedId.value = value;
    });
    watch(function () {
      return props.color.gradientColors;
    }, function (value) {
      colors.value = cloneDeep_1(value);
    }, {
      deep: true
    });
    var handleChange = function handleChange(key, payload, addUsedColor) {
      if (props.disabled) {
        return;
      }
      props.onChange({
        key: key,
        payload: payload,
        addUsedColor: addUsedColor
      });
    };
    var handleDegreeChange = function handleDegreeChange(value) {
      if (props.disabled || value === props.color.gradientDegree) {
        return;
      }
      degree.value = value;
      handleChange("degree", value, true);
    };
    var handleSelectedIdChange = function handleSelectedIdChange(value) {
      if (props.disabled) {
        return;
      }
      selectedId.value = value;
      handleChange("selectedId", value);
    };
    var handleColorsChange = function handleColorsChange(value, isEnded) {
      if (props.disabled) {
        return;
      }
      colors.value = value;
      handleChange("colors", value, isEnded);
    };
    var updateActiveThumbLeft = function updateActiveThumbLeft(left) {
      var index = colors.value.findIndex(function (c) {
        return c.id === selectedId.value;
      });
      if (index === -1) {
        return;
      }
      var point = colors.value[index];
      left = Math.max(0, Math.min(sliderRect.width, left));
      var percentLeft = left / sliderRect.width * 100;
      colors.value.splice(index, 1, {
        color: point.color,
        left: percentLeft,
        id: point.id
      });
      handleColorsChange(colors.value);
    };
    var handleStart = function handleStart(id) {
      var rect = refSlider.value.getBoundingClientRect();
      sliderRect.left = rect.left;
      sliderRect.width = rect.width || GRADIENT_SLIDER_DEFAULT_WIDTH;
      if (isDragging.value || props.disabled) {
        return;
      }
      isMoved.value = false;
      isDragging.value = true;
      handleSelectedIdChange(id);
      refSlider.value.focus();
      window.addEventListener("mousemove", handleMove, false);
      window.addEventListener("mouseup", _handleEnd, false);
      window.addEventListener("contextmenu", _handleEnd, false);
    };
    var handleMove = function handleMove(e) {
      if (!isDragging.value || props.disabled) {
        return;
      }
      var left = e.clientX - sliderRect.left;
      isMoved.value = true;
      updateActiveThumbLeft(left);
    };
    var _handleEnd = function handleEnd() {
      if (!isDragging.value) {
        return;
      }
      setTimeout(function () {
        isDragging.value = false;
      }, 0);
      if (isMoved.value) {
        handleColorsChange(colors.value, true);
        isMoved.value = false;
      }
      window.removeEventListener("mousemove", handleMove, false);
      window.removeEventListener("mouseup", _handleEnd, false);
      window.removeEventListener("contextmenu", _handleEnd, false);
    };
    var handleKeyup = function handleKeyup(e) {
      if (props.disabled) {
        return;
      }
      var points = colors.value;
      var pos = points.findIndex(function (c) {
        return c.id === selectedId.value;
      });
      var length = points.length;
      if (DELETE_KEYS.includes(e.key.toLocaleLowerCase()) && length > 2 && pos >= 0 && pos <= length - 1) {
        points.splice(pos, 1);
        if (!points[pos]) {
          pos = points[pos + 1] ? pos + 1 : points[pos - 1] ? pos - 1 : 0;
        }
        var current = points[pos];
        handleColorsChange(points, true);
        handleSelectedIdChange(current === null || current === void 0 ? void 0 : current.id);
      }
    };
    var handleThumbBarClick = function handleThumbBarClick(e) {
      if (props.disabled || !props.enableMultipleGradient) {
        return;
      }
      var left = e.clientX - sliderRect.left;
      left = Math.max(0, Math.min(sliderRect.width, left));
      var percentLeft = left / sliderRect.width * 100;
      var newPoint = genGradientPoint(percentLeft, props.color.rgba);
      colors.value.push(newPoint);
      handleColorsChange(colors.value, true);
      handleSelectedIdChange(newPoint.id);
    };
    onMounted(function () {
      var rect = refSlider.value.getBoundingClientRect();
      sliderRect.left = rect.left;
      sliderRect.width = rect.width || GRADIENT_SLIDER_DEFAULT_WIDTH;
    });
    onBeforeUnmount(function () {
      window.removeEventListener("mousemove", handleMove, false);
      window.removeEventListener("mouseup", _handleEnd, false);
      window.removeEventListener("contextmenu", _handleEnd, false);
    });
    return {
      baseClassName: baseClassName,
      statusClassNames: statusClassNames,
      refSlider: refSlider,
      degree: degree,
      selectedId: selectedId,
      colors: colors,
      handleDegreeChange: handleDegreeChange,
      handleStart: handleStart,
      handleMove: handleMove,
      handleEnd: _handleEnd,
      handleKeyup: handleKeyup,
      handleThumbBarClick: handleThumbBarClick
    };
  },
  render: function render() {
    var _this = this;
    var _this$color = this.color,
      linearGradient = _this$color.linearGradient,
      gradientColors = _this$color.gradientColors;
    var colors = this.colors,
      selectedId = this.selectedId,
      degree = this.degree,
      disabled = this.disabled,
      baseClassName = this.baseClassName,
      statusClassNames = this.statusClassNames;
    var thumbBackground = gradientColors2string({
      points: gradientColors,
      degree: 90
    });
    return createVNode("div", {
      "class": "".concat(baseClassName, "__gradient")
    }, [createVNode("div", {
      "class": "".concat(baseClassName, "__gradient-slider")
    }, [createVNode("div", {
      "class": ["".concat(baseClassName, "__slider"), "".concat(baseClassName, "--bg-alpha")],
      "onKeyup": this.handleKeyup,
      "tabindex": 0,
      "ref": "refSlider"
    }, [createVNode("ul", {
      "class": "gradient-thumbs",
      "onClick": this.handleThumbBarClick,
      "style": {
        background: thumbBackground
      }
    }, [colors.map(function (t) {
      var left = "".concat(Math.round(t.left * 100) / 100, "%");
      return createVNode("li", {
        "class": ["".concat(baseClassName, "__thumb"), "gradient-thumbs__item", selectedId === t.id ? statusClassNames.active : ""],
        "key": t.id,
        "title": "".concat(t.color, " ").concat(left),
        "style": {
          color: t.color,
          left: left
        },
        "onClick": function onClick(e) {
          return e.stopPropagation();
        },
        "onMousedown": function onMousedown() {
          return _this.handleStart(t.id);
        }
      }, [createVNode("span", {
        "class": ["gradient-thumbs__item-inner", "".concat(baseClassName, "--bg-alpha")]
      }, null)]);
    })])])]), createVNode("div", {
      "class": "".concat(baseClassName, "__gradient-degree"),
      "title": "".concat(degree, "deg")
    }, [createVNode(InputNumber, {
      "size": "small",
      "theme": "normal",
      "min": 0,
      "max": 360,
      "step": 1,
      "format": function format(value) {
        return "".concat(value, "\xB0");
      },
      "modelValue": _this.degree,
      "onUpdate:modelValue": function onUpdateModelValue($event) {
        return _this.degree = $event;
      },
      "onBlur": this.handleDegreeChange,
      "onEnter": this.handleDegreeChange,
      "disabled": disabled
    }, null)]), createVNode("div", {
      "class": ["".concat(baseClassName, "__gradient-preview"), "".concat(baseClassName, "--bg-alpha")]
    }, [createVNode("span", {
      "class": "preview-inner",
      "style": {
        background: linearGradient
      }
    }, null)])]);
  }
});

export { LinearGradient as default };
//# sourceMappingURL=linear-gradient.mjs.map
