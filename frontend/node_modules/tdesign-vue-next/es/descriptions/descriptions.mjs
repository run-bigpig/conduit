/**
 * tdesign v1.10.6
 * (c) 2024 tdesign
 * @license MIT
 */

import { _ as _defineProperty } from '../_chunks/dep-2cd917b7.mjs';
import { defineComponent, ref, provide, createVNode } from 'vue';
import { i as isNil_1 } from '../_chunks/dep-7baeba65.mjs';
import { i as isArray_1 } from '../_chunks/dep-0c393202.mjs';
import { useTNodeJSX } from '../hooks/tnode.mjs';
import { useChildComponentSlots } from '../hooks/slot.mjs';
import { usePrefixClass, useCommonClassName } from '../hooks/useConfig.mjs';
import props from './props.mjs';
import { descriptionsKey } from './const/index.mjs';
import DescriptionsRow from './descriptions-row.mjs';
import { renderCustomNode, itemTypeIsProps } from './utils/index.mjs';
import { ItemsType } from './interface.mjs';
import '../_chunks/dep-b36c56dd.mjs';
import '../_chunks/dep-c343de10.mjs';
import '../_chunks/dep-e38b198c.mjs';
import '../_chunks/dep-5d6ad0f8.mjs';
import '../_chunks/dep-05274cf8.mjs';
import '../_chunks/dep-d10845aa.mjs';
import '../_chunks/dep-9f3c7a03.mjs';
import '../_chunks/dep-b1273bbc.mjs';
import '../_chunks/dep-da8c0faf.mjs';
import '../_chunks/dep-81a441b7.mjs';
import '../_chunks/dep-b9904594.mjs';
import '../_chunks/dep-8c4e0f42.mjs';
import '../_chunks/dep-5b0920c8.mjs';
import '../_chunks/dep-0d26b449.mjs';
import '../_chunks/dep-90feab0a.mjs';
import '../utils/render-tnode.mjs';
import '../_chunks/dep-fb32dbe0.mjs';
import '../_chunks/dep-eda9976d.mjs';
import '../_chunks/dep-c7111b68.mjs';
import '../_chunks/dep-aaf0a453.mjs';
import '../_chunks/dep-2bcf3734.mjs';
import '../_chunks/dep-4e9148a5.mjs';
import '../_chunks/dep-45bc846d.mjs';
import '../_chunks/dep-f03d2f0f.mjs';
import '../_chunks/dep-67e3536c.mjs';
import '../_chunks/dep-5639eb7d.mjs';
import '../config-provider/useConfig.mjs';
import '../_chunks/dep-5a707436.mjs';
import '../_chunks/dep-bc6946b4.mjs';
import '../_chunks/dep-a33ab1de.mjs';
import '../_chunks/dep-653fadb3.mjs';
import '../_chunks/dep-5005acfb.mjs';
import '../_chunks/dep-754933cb.mjs';
import '../_chunks/dep-6d263d27.mjs';
import '../_chunks/dep-5d631aa0.mjs';
import '../_chunks/dep-94da3846.mjs';
import '../_chunks/dep-28ab9e3e.mjs';
import '../_chunks/dep-0d4a3f7e.mjs';
import '../_chunks/dep-bd1b86d0.mjs';
import '../_chunks/dep-37ea0644.mjs';
import '../_chunks/dep-1d4985f2.mjs';
import '../_chunks/dep-ace4b3db.mjs';
import '../_common/js/global-config/default-config.mjs';
import '../_common/js/global-config/locale/zh_CN.mjs';
import '../_chunks/dep-5101fc98.mjs';
import '../_chunks/dep-06adc476.mjs';
import '../_chunks/dep-eb1a861a.mjs';
import '../config-provider/type.mjs';

var _Descriptions = defineComponent({
  name: "TDescriptions",
  props: props,
  setup: function setup(props2) {
    var COMPONENT_NAME = usePrefixClass("descriptions");
    var _useCommonClassName = useCommonClassName(),
      SIZE = _useCommonClassName.SIZE;
    var getChildByName = useChildComponentSlots();
    var renderTNodeJSX = useTNodeJSX();
    var itemsType = ref(ItemsType.props);
    var getRows = function getRows() {
      var column = props2.column,
        layout = props2.layout;
      var items = [];
      if (isArray_1(props2.items)) {
        items = props2.items.map(function (item) {
          return {
            label: renderCustomNode(item.label),
            content: renderCustomNode(item.content),
            span: item.span || 1
          };
        });
        itemsType.value = ItemsType.props;
      } else {
        var slots = getChildByName("TDescriptionsItem");
        if (slots.length !== 0) {
          items = slots;
          itemsType.value = ItemsType.slots;
        }
      }
      if (layout === "vertical") {
        return [items];
      }
      var temp = [];
      var reset = column;
      var res = [];
      items.forEach(function (item, index) {
        var span = 1;
        if (itemTypeIsProps(itemsType.value, item)) {
          span = isNil_1(item.span) ? span : item.span;
          span = span > column ? column : span;
        } else {
          var _item$props;
          item.props = item.props || {};
          span = isNil_1((_item$props = item.props) === null || _item$props === void 0 ? void 0 : _item$props.span) ? span : item.props.span;
          span = span > column ? column : span;
          item.props.span = span;
        }
        if (reset >= span) {
          temp.push(item);
          reset -= span;
        } else {
          res.push(temp);
          temp = [item];
          reset = column - span;
        }
        if (index === items.length - 1) {
          if (itemTypeIsProps(itemsType.value, item)) {
            item.span += reset;
          } else {
            item.props.span += reset;
          }
          res.push(temp);
        }
      });
      return res;
    };
    provide(descriptionsKey, props2);
    var renderBody = function renderBody() {
      var tableClass = ["".concat(COMPONENT_NAME.value, "__body"), SIZE.value[props2.size], _defineProperty({}, "".concat(COMPONENT_NAME.value, "__body--fixed"), props2.tableLayout === "fixed"), _defineProperty({}, "".concat(COMPONENT_NAME.value, "__body--border"), props2.bordered)];
      return createVNode("table", {
        "class": tableClass
      }, [createVNode("tbody", null, [getRows().map(function (row) {
        return createVNode(DescriptionsRow, {
          "item-type": itemsType.value,
          "row": row
        }, null);
      })])]);
    };
    var renderHeader = function renderHeader() {
      var title = renderTNodeJSX("title");
      return title ? createVNode("div", {
        "class": "".concat(COMPONENT_NAME.value, "__header")
      }, [title]) : "";
    };
    return function () {
      return createVNode("div", {
        "class": COMPONENT_NAME.value
      }, [renderHeader(), renderBody()]);
    };
  }
});

export { _Descriptions as default };
//# sourceMappingURL=descriptions.mjs.map
