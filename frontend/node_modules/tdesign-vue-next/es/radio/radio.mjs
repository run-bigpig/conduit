/**
 * tdesign v1.10.6
 * (c) 2024 tdesign
 * @license MIT
 */

import { _ as _toConsumableArray } from '../_chunks/dep-769cdfcc.mjs';
import { _ as _slicedToArray } from '../_chunks/dep-b250efbd.mjs';
import { _ as _defineProperty } from '../_chunks/dep-2cd917b7.mjs';
import { defineComponent, ref, toRefs, computed, inject, createVNode, mergeProps } from 'vue';
import { useCommonClassName, usePrefixClass } from '../hooks/useConfig.mjs';
import { omit } from '../utils/helper.mjs';
import props from './props.mjs';
import { RadioGroupInjectionKey, RadioButtonInjectionKey } from './constants.mjs';
import { useDisabled } from '../hooks/useDisabled.mjs';
import { useReadonly } from '../hooks/useReadonly.mjs';
import useVModel from '../hooks/useVModel.mjs';
import { useContent } from '../hooks/tnode.mjs';
import { i as isUndefined_1 } from '../_chunks/dep-860543c8.mjs';
import { i as isString_1 } from '../_chunks/dep-5639eb7d.mjs';
import '../_chunks/dep-13773b3a.mjs';
import '../_chunks/dep-b36c56dd.mjs';
import '../config-provider/useConfig.mjs';
import '../_chunks/dep-e38b198c.mjs';
import '../_chunks/dep-c343de10.mjs';
import '../_chunks/dep-5d6ad0f8.mjs';
import '../_chunks/dep-05274cf8.mjs';
import '../_chunks/dep-d10845aa.mjs';
import '../_chunks/dep-5a707436.mjs';
import '../_chunks/dep-bc6946b4.mjs';
import '../_chunks/dep-a33ab1de.mjs';
import '../_chunks/dep-653fadb3.mjs';
import '../_chunks/dep-45bc846d.mjs';
import '../_chunks/dep-2bcf3734.mjs';
import '../_chunks/dep-5005acfb.mjs';
import '../_chunks/dep-c7111b68.mjs';
import '../_chunks/dep-aaf0a453.mjs';
import '../_chunks/dep-b9904594.mjs';
import '../_chunks/dep-4e9148a5.mjs';
import '../_chunks/dep-754933cb.mjs';
import '../_chunks/dep-6d263d27.mjs';
import '../_chunks/dep-67e3536c.mjs';
import '../_chunks/dep-0c393202.mjs';
import '../_chunks/dep-da8c0faf.mjs';
import '../_chunks/dep-5d631aa0.mjs';
import '../_chunks/dep-eda9976d.mjs';
import '../_chunks/dep-f03d2f0f.mjs';
import '../_chunks/dep-94da3846.mjs';
import '../_chunks/dep-28ab9e3e.mjs';
import '../_chunks/dep-0d4a3f7e.mjs';
import '../_chunks/dep-bd1b86d0.mjs';
import '../_chunks/dep-37ea0644.mjs';
import '../_chunks/dep-1d4985f2.mjs';
import '../_chunks/dep-ace4b3db.mjs';
import '../_common/js/global-config/default-config.mjs';
import '../_common/js/global-config/locale/zh_CN.mjs';
import '../_chunks/dep-5101fc98.mjs';
import '../_chunks/dep-06adc476.mjs';
import '../_chunks/dep-eb1a861a.mjs';
import '../config-provider/type.mjs';
import '../_chunks/dep-62613491.mjs';
import '../_chunks/dep-9f3c7a03.mjs';
import '../_chunks/dep-b1273bbc.mjs';
import '../_chunks/dep-81a441b7.mjs';
import '../_chunks/dep-8c4e0f42.mjs';
import '../_chunks/dep-5b0920c8.mjs';
import '../_chunks/dep-0d26b449.mjs';
import '../_chunks/dep-41afea2a.mjs';
import '../_chunks/dep-be7755a9.mjs';
import '../_chunks/dep-208ab852.mjs';
import '../_chunks/dep-90feab0a.mjs';
import '../utils/render-tnode.mjs';
import '../_chunks/dep-fb32dbe0.mjs';

function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
function getValidAttrs(obj) {
  var newObj = {};
  Object.keys(obj).forEach(function (key) {
    if (!isUndefined_1(obj[key])) {
      newObj[key] = obj[key];
    }
  });
  return newObj;
}
var _Radio = defineComponent({
  name: "TRadio",
  inheritAttrs: false,
  props: _objectSpread({}, props),
  setup: function setup(props2, _ref) {
    var attrs = _ref.attrs;
    var inputRef = ref();
    var _toRefs = toRefs(props2),
      checked = _toRefs.checked,
      modelValue = _toRefs.modelValue;
    var _useVModel = useVModel(checked, modelValue, props2.defaultChecked, props2.onChange, "checked"),
      _useVModel2 = _slicedToArray(_useVModel, 2),
      innerChecked = _useVModel2[0],
      setInnerChecked = _useVModel2[1];
    var radioChecked = computed(function () {
      return radioGroup ? props2.value === radioGroup.value : innerChecked.value;
    });
    var radioGroup = inject(RadioGroupInjectionKey, void 0);
    var allowUncheck = computed(function () {
      return Boolean(props2.allowUncheck || (radioGroup === null || radioGroup === void 0 ? void 0 : radioGroup.allowUncheck));
    });
    var handleClick = function handleClick(e) {
      e.stopPropagation();
    };
    var onLabelClick = function onLabelClick(e) {
      var _props2$onClick;
      if (isDisabled.value || isReadonly.value) return;
      (_props2$onClick = props2.onClick) === null || _props2$onClick === void 0 || _props2$onClick.call(props2, {
        e: e
      });
      if (radioChecked.value && !allowUncheck.value) return;
      if (radioGroup) {
        var value = radioChecked.value && allowUncheck.value ? void 0 : props2.value;
        radioGroup.setValue(value, {
          e: e,
          name: radioGroup.name
        });
      } else {
        var _value = allowUncheck.value ? !radioChecked.value : true;
        setInnerChecked(_value, {
          e: e
        });
      }
    };
    var inputEvents = computed(function () {
      return getValidAttrs({
        focus: attrs.onFocus,
        blur: attrs.onBlur,
        keydown: attrs.onKeydown,
        keyup: attrs.onKeyup,
        keypresss: attrs.onKeypresss
      });
    });
    var wrapperAttrs = computed(function () {
      var events = [].concat(_toConsumableArray(Object.keys(inputEvents.value)), ["input", "change"]).map(function (str) {
        return "on".concat(str[0].toUpperCase()).concat(str.slice(1));
      });
      return omit(attrs, events);
    });
    var groupDisabled = computed(function () {
      return radioGroup === null || radioGroup === void 0 ? void 0 : radioGroup.disabled;
    });
    var groupReadonly = computed(function () {
      return radioGroup === null || radioGroup === void 0 ? void 0 : radioGroup.readonly;
    });
    var isDisabled = useDisabled({
      afterDisabled: groupDisabled
    });
    var isReadonly = useReadonly({
      afterReadonly: groupReadonly
    });
    var inputProps = computed(function () {
      return {
        name: radioGroup ? radioGroup.name : props2.name,
        checked: radioChecked.value,
        disabled: isDisabled.value,
        readonly: isReadonly.value,
        value: props2.value
      };
    });
    var _useCommonClassName = useCommonClassName(),
      STATUS = _useCommonClassName.STATUS;
    var radioButton = inject(RadioButtonInjectionKey, void 0);
    var radioBtnName = usePrefixClass("radio-button");
    var COMPONENT_NAME = usePrefixClass("radio");
    var prefixCls = computed(function () {
      return radioButton ? radioBtnName.value : COMPONENT_NAME.value;
    });
    var inputClass = computed(function () {
      return ["".concat(prefixCls.value), _defineProperty(_defineProperty({}, STATUS.value.checked, inputProps.value.checked), STATUS.value.disabled, inputProps.value.disabled)];
    });
    var renderContent = useContent();
    return function () {
      return createVNode("label", mergeProps({
        "ref": inputRef,
        "class": inputClass.value
      }, wrapperAttrs.value, {
        "tabindex": isDisabled.value ? void 0 : "0",
        "onClick": onLabelClick
      }), [createVNode("input", mergeProps({
        "type": "radio",
        "class": "".concat(prefixCls.value, "__former")
      }, inputEvents.value, inputProps.value, {
        "onClick": handleClick,
        "tabindex": "-1",
        "data-value": isString_1(props2.value) ? "'".concat(props2.value, "'") : props2.value,
        "data-allow-uncheck": allowUncheck.value || void 0
      }), null), createVNode("span", {
        "class": "".concat(prefixCls.value, "__input")
      }, null), createVNode("span", {
        "class": "".concat(prefixCls.value, "__label")
      }, [renderContent("default", "label")])]);
    };
  }
});

export { _Radio as default };
//# sourceMappingURL=radio.mjs.map
