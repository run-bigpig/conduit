/**
 * tdesign v1.10.6
 * (c) 2024 tdesign
 * @license MIT
 */

import { _ as _slicedToArray } from '../../_chunks/dep-b250efbd.mjs';
import { defineComponent, createVNode, h } from 'vue';
import { ChevronRightIcon, ChevronLeftIcon } from 'tdesign-icons-vue-next';
import { Button } from '../../button/index.mjs';
import { usePrefixClass } from '../../hooks/useConfig.mjs';
import { useGlobalIcon } from '../../hooks/useGlobalIcon.mjs';
import props from '../props.mjs';
import { i as isFunction_1 } from '../../_chunks/dep-e38b198c.mjs';
import { i as isString_1 } from '../../_chunks/dep-5639eb7d.mjs';
import { i as isArray_1 } from '../../_chunks/dep-0c393202.mjs';
import '../../_chunks/dep-13773b3a.mjs';
import '../../button/button.mjs';
import '../../_chunks/dep-769cdfcc.mjs';
import '../../_chunks/dep-2cd917b7.mjs';
import '../../_chunks/dep-b36c56dd.mjs';
import '../../loading/index.mjs';
import '../../_chunks/dep-77ea84d8.mjs';
import '../../_chunks/dep-05274cf8.mjs';
import '../../_chunks/dep-c343de10.mjs';
import '../../_chunks/dep-754933cb.mjs';
import '../../_chunks/dep-6d263d27.mjs';
import '../../_chunks/dep-45bc846d.mjs';
import '../../_chunks/dep-2bcf3734.mjs';
import '../../_chunks/dep-5d6ad0f8.mjs';
import '../../_chunks/dep-d10845aa.mjs';
import '../../_chunks/dep-5005acfb.mjs';
import '../../_chunks/dep-28ab9e3e.mjs';
import '../../_chunks/dep-a33ab1de.mjs';
import '../../_chunks/dep-653fadb3.mjs';
import '../../_chunks/dep-c7111b68.mjs';
import '../../_chunks/dep-aaf0a453.mjs';
import '../../_chunks/dep-b9904594.mjs';
import '../../_chunks/dep-4e9148a5.mjs';
import '../../_chunks/dep-67e3536c.mjs';
import '../../_chunks/dep-da8c0faf.mjs';
import '../../_chunks/dep-5d631aa0.mjs';
import '../../_chunks/dep-0d4a3f7e.mjs';
import '../../_chunks/dep-bd1b86d0.mjs';
import '../../_chunks/dep-37ea0644.mjs';
import '../../_chunks/dep-1d4985f2.mjs';
import '../../_chunks/dep-ace4b3db.mjs';
import '../../_common/js/global-config/default-config.mjs';
import '../../_common/js/global-config/locale/zh_CN.mjs';
import '../../_chunks/dep-5101fc98.mjs';
import '../../_chunks/dep-06adc476.mjs';
import '../../_chunks/dep-eb1a861a.mjs';
import '../../_chunks/dep-bc6946b4.mjs';
import '../../_chunks/dep-eda9976d.mjs';
import '../../_chunks/dep-f03d2f0f.mjs';
import '../../_chunks/dep-94da3846.mjs';
import '../../_chunks/dep-1dda5d5d.mjs';
import '../../_chunks/dep-0b5c77ed.mjs';
import '../../_chunks/dep-4a6bdbd3.mjs';
import '../../_chunks/dep-0df36f23.mjs';
import '../../_chunks/dep-ff82207a.mjs';
import '../../_chunks/dep-81a441b7.mjs';
import '../../_chunks/dep-b1273bbc.mjs';
import '../../_chunks/dep-29715a4a.mjs';
import '../../_chunks/dep-6502b585.mjs';
import '../../loading/plugin.mjs';
import '../../loading/loading.mjs';
import '../../loading/icon/gradient.mjs';
import '../../_common/js/loading/circle-adapter.mjs';
import '../../_common/js/utils/set-style.mjs';
import '../../_common/js/utils/helper.mjs';
import '../../_chunks/dep-62613491.mjs';
import '../../_chunks/dep-41afea2a.mjs';
import '../../_chunks/dep-860543c8.mjs';
import '../../_chunks/dep-be7755a9.mjs';
import '../../utils/dom.mjs';
import '../../utils/easing.mjs';
import '../../utils/render-tnode.mjs';
import '../../_chunks/dep-fb32dbe0.mjs';
import '../../_chunks/dep-9f3c7a03.mjs';
import '../../_chunks/dep-8c4e0f42.mjs';
import '../../_chunks/dep-5b0920c8.mjs';
import '../../_chunks/dep-0d26b449.mjs';
import '../../_chunks/dep-90feab0a.mjs';
import '../../loading/props.mjs';
import '../../hooks/useTeleport.mjs';
import '../../config-provider/useConfig.mjs';
import '../../_chunks/dep-5a707436.mjs';
import '../../config-provider/type.mjs';
import '../../utils/withInstall.mjs';
import './style/css.mjs';
import '../../loading/type.mjs';
import '../../button/props.mjs';
import '../../hooks/useRipple.mjs';
import '../../hooks/useKeepAnimation.mjs';
import '../../utils/set-style.mjs';
import '../../hooks/tnode.mjs';
import '../../hooks/useDisabled.mjs';
import '../../_chunks/dep-208ab852.mjs';
import '../../button/type.mjs';

var TransferOperations = defineComponent({
  name: "TTransferOperations",
  props: {
    leftDisabled: {
      type: Boolean,
      required: true
    },
    rightDisabled: {
      type: Boolean,
      required: true
    },
    operation: props.operation
  },
  emits: ["moveToRight", "moveToLeft"],
  setup: function setup(props2, _ref) {
    var slots = _ref.slots,
      emit = _ref.emit;
    var classPrefix = usePrefixClass();
    var _useGlobalIcon = useGlobalIcon({
        ChevronRightIcon: ChevronRightIcon,
        ChevronLeftIcon: ChevronLeftIcon
      }),
      ChevronRightIcon$1 = _useGlobalIcon.ChevronRightIcon,
      ChevronLeftIcon$1 = _useGlobalIcon.ChevronLeftIcon;
    var moveToRight = function moveToRight() {
      emit("moveToRight");
    };
    var moveToLeft = function moveToLeft() {
      emit("moveToLeft");
    };
    var getIconRight = function getIconRight() {
      return createVNode(ChevronRightIcon$1, null, null);
    };
    var getIconLeft = function getIconLeft() {
      return createVNode(ChevronLeftIcon$1, null, null);
    };
    var getIcon = function getIcon(direction) {
      if (isFunction_1(props2.operation)) {
        return null;
      }
      if (direction === "right" && props2.operation && isFunction_1(props2.operation[0])) {
        return null;
      }
      if (direction === "left" && props2.operation && isFunction_1(props2.operation[1])) {
        return null;
      }
      if (slots.operation) {
        return null;
      }
      return direction === "left" ? getIconLeft : getIconRight;
    };
    var renderButton = function renderButton(h2, direction) {
      if (isFunction_1(slots.operation)) {
        return slots.operation({
          direction: direction
        });
      }
      if (isFunction_1(props2.operation)) {
        var renderContent2 = props2.operation;
        return renderContent2(h2, {
          direction: direction
        });
      }
      var renderContent;
      if (isArray_1(props2.operation)) {
        var _props2$operation = _slicedToArray(props2.operation, 2),
          left = _props2$operation[0],
          right = _props2$operation[1];
        renderContent = direction === "right" ? right : left;
      } else {
        renderContent = "";
      }
      return renderContent;
    };
    return function () {
      var _props2$operation2, _props2$operation3, _props2$operation4, _props2$operation5;
      return createVNode("div", {
        "class": "".concat(classPrefix.value, "-transfer__operations")
      }, [createVNode(Button, {
        "variant": "outline",
        "size": "small",
        "shape": isString_1((_props2$operation2 = props2.operation) === null || _props2$operation2 === void 0 ? void 0 : _props2$operation2[1]) ? "rectangle" : "square",
        "key": props2.rightDisabled ? "right-outline" : "right-base",
        "disabled": props2.rightDisabled,
        "onClick": moveToRight,
        "icon": getIcon("right")
      }, {
        "default": function _default() {
          return [slots.operation || (_props2$operation3 = props2.operation) !== null && _props2$operation3 !== void 0 && _props2$operation3[1] ? renderButton(h, "right") : null];
        }
      }), createVNode(Button, {
        "variant": "outline",
        "size": "small",
        "shape": isString_1((_props2$operation4 = props2.operation) === null || _props2$operation4 === void 0 ? void 0 : _props2$operation4[0]) ? "rectangle" : "square",
        "key": props2.rightDisabled ? "left-outline" : "left-base",
        "disabled": props2.leftDisabled,
        "onClick": moveToLeft,
        "icon": getIcon("left")
      }, {
        "default": function _default() {
          return [slots.operation || (_props2$operation5 = props2.operation) !== null && _props2$operation5 !== void 0 && _props2$operation5[0] ? renderButton(h, "left") : null];
        }
      })]);
    };
  }
});

export { TransferOperations as default };
//# sourceMappingURL=transfer-operations.mjs.map
