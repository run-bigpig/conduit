/**
 * tdesign v1.10.6
 * (c) 2024 tdesign
 * @license MIT
 */

import { _ as _slicedToArray } from '../../_chunks/dep-b250efbd.mjs';
import '../adapt.mjs';
import { getNode, pathMatchClass } from '../util.mjs';
import { usePrefixClass } from '../../hooks/useConfig.mjs';
import '../../_chunks/dep-13773b3a.mjs';
import 'vue';
import '../../utils/withInstall.mjs';
import '../../hooks/useVModel.mjs';
import '../../_chunks/dep-90feab0a.mjs';
import '../../_chunks/dep-c343de10.mjs';
import '../../_chunks/dep-0d26b449.mjs';
import '../../_chunks/dep-b1273bbc.mjs';
import '../../_chunks/dep-5d6ad0f8.mjs';
import '../../_chunks/dep-b36c56dd.mjs';
import '../../_chunks/dep-0c393202.mjs';
import '../../_chunks/dep-da8c0faf.mjs';
import '../../_chunks/dep-81a441b7.mjs';
import '../../_chunks/dep-b9904594.mjs';
import '../../hooks/useDefaultValue.mjs';
import 'tdesign-icons-vue-next';
import '../../checkbox/index.mjs';
import '../../checkbox/checkbox.mjs';
import '../../_chunks/dep-2cd917b7.mjs';
import '../../_chunks/dep-5639eb7d.mjs';
import '../../checkbox/props.mjs';
import '../../hooks/useRipple.mjs';
import '../../hooks/useKeepAnimation.mjs';
import '../../_chunks/dep-28ab9e3e.mjs';
import '../../_chunks/dep-a33ab1de.mjs';
import '../../_chunks/dep-653fadb3.mjs';
import '../../_chunks/dep-45bc846d.mjs';
import '../../_chunks/dep-e38b198c.mjs';
import '../../_chunks/dep-05274cf8.mjs';
import '../../_chunks/dep-d10845aa.mjs';
import '../../_chunks/dep-2bcf3734.mjs';
import '../../_chunks/dep-5005acfb.mjs';
import '../../_chunks/dep-c7111b68.mjs';
import '../../_chunks/dep-aaf0a453.mjs';
import '../../_chunks/dep-4e9148a5.mjs';
import '../../_chunks/dep-754933cb.mjs';
import '../../_chunks/dep-6d263d27.mjs';
import '../../_chunks/dep-67e3536c.mjs';
import '../../_chunks/dep-5d631aa0.mjs';
import '../../_chunks/dep-0d4a3f7e.mjs';
import '../../_chunks/dep-bd1b86d0.mjs';
import '../../_chunks/dep-37ea0644.mjs';
import '../../_chunks/dep-1d4985f2.mjs';
import '../../_chunks/dep-ace4b3db.mjs';
import '../../_common/js/global-config/default-config.mjs';
import '../../_common/js/global-config/locale/zh_CN.mjs';
import '../../_chunks/dep-5101fc98.mjs';
import '../../_chunks/dep-06adc476.mjs';
import '../../_chunks/dep-eb1a861a.mjs';
import '../../config-provider/useConfig.mjs';
import '../../_chunks/dep-5a707436.mjs';
import '../../_chunks/dep-bc6946b4.mjs';
import '../../_chunks/dep-eda9976d.mjs';
import '../../_chunks/dep-f03d2f0f.mjs';
import '../../_chunks/dep-94da3846.mjs';
import '../../config-provider/type.mjs';
import '../../utils/set-style.mjs';
import '../../hooks/tnode.mjs';
import '../../_chunks/dep-9f3c7a03.mjs';
import '../../_chunks/dep-8c4e0f42.mjs';
import '../../_chunks/dep-5b0920c8.mjs';
import '../../utils/render-tnode.mjs';
import '../../_chunks/dep-fb32dbe0.mjs';
import '../../checkbox/constants.mjs';
import '../../checkbox/hooks/useCheckboxLazyLoad.mjs';
import '../../_common/js/utils/observe.mjs';
import '../../checkbox/hooks/useKeyboardEvent.mjs';
import '../../_common/js/common.mjs';
import '../../hooks/useDisabled.mjs';
import '../../_chunks/dep-208ab852.mjs';
import '../../hooks/useReadonly.mjs';
import '../../checkbox/group.mjs';
import '../../_chunks/dep-769cdfcc.mjs';
import '../../_chunks/dep-145a173e.mjs';
import '../../_chunks/dep-0b5c77ed.mjs';
import '../../_chunks/dep-e331b803.mjs';
import '../../_chunks/dep-860543c8.mjs';
import '../../checkbox/checkbox-group-props.mjs';
import '../../hooks/slot.mjs';
import './style/css.mjs';
import '../../checkbox/type.mjs';
import '../../loading/index.mjs';
import '../../_chunks/dep-77ea84d8.mjs';
import '../../_chunks/dep-1dda5d5d.mjs';
import '../../_chunks/dep-4a6bdbd3.mjs';
import '../../_chunks/dep-0df36f23.mjs';
import '../../_chunks/dep-ff82207a.mjs';
import '../../_chunks/dep-29715a4a.mjs';
import '../../_chunks/dep-6502b585.mjs';
import '../../loading/plugin.mjs';
import '../../loading/loading.mjs';
import '../../loading/icon/gradient.mjs';
import '../../_common/js/loading/circle-adapter.mjs';
import '../../_common/js/utils/set-style.mjs';
import '../../_common/js/utils/helper.mjs';
import '../../_chunks/dep-62613491.mjs';
import '../../_chunks/dep-41afea2a.mjs';
import '../../_chunks/dep-be7755a9.mjs';
import '../../utils/dom.mjs';
import '../../utils/easing.mjs';
import '../../loading/props.mjs';
import '../../hooks/useTeleport.mjs';
import '../../loading/type.mjs';
import '../../hooks/useGlobalIcon.mjs';
import '../../hooks/useLazyLoad.mjs';
import '../../hooks/useVirtualScrollNew.mjs';
import '../../hooks/useResizeObserver.mjs';
import '../../_chunks/dep-b523a7a1.mjs';
import '../../_chunks/dep-5094012f.mjs';
import '../../_chunks/dep-98a67207.mjs';
import '../../_common/js/tree/tree-node.mjs';
import '../../_chunks/dep-2ebd3a6b.mjs';
import '../../_chunks/dep-4a07c5ff.mjs';
import '../../_chunks/dep-f79b5614.mjs';
import '../../_chunks/dep-7baeba65.mjs';
import '../../_common/js/tree/tree-node-model.mjs';
import '../../_chunks/dep-d2ce4e2b.mjs';
import '../../_chunks/dep-78e0bb48.mjs';
import '../../_chunks/dep-78a897b3.mjs';
import '../../_common/js/log/log.mjs';
import '../../_common/js/log/index.mjs';

function useTreeAction(state) {
  var treeState = state;
  var store = treeState.store;
  var componentName = usePrefixClass("tree").value;
  var _state$vmValue = _slicedToArray(state.vmValue, 2),
    tValue = _state$vmValue[0],
    setTValue = _state$vmValue[1];
  var _state$vmActived = _slicedToArray(state.vmActived, 2),
    tActived = _state$vmActived[0],
    setTActived = _state$vmActived[1];
  var _state$vmExpanded = _slicedToArray(state.vmExpanded, 2),
    tExpanded = _state$vmExpanded[0],
    setTExpanded = _state$vmExpanded[1];
  var setExpanded = function setExpanded(item, isExpanded) {
    var node = getNode(store, item);
    var mouseEvent = treeState.mouseEvent;
    var evtCtx = {
      node: node.getModel(),
      e: mouseEvent,
      trigger: "setItem"
    };
    if (mouseEvent) {
      evtCtx.trigger = "node-click";
      var target = mouseEvent.target;
      var currentTarget = mouseEvent.currentTarget;
      if (pathMatchClass("".concat(componentName, "__icon"), target, currentTarget)) {
        evtCtx.trigger = "icon-click";
      }
    }
    var expanded = node.setExpanded(isExpanded, {
      directly: true
    });
    setTExpanded(expanded, evtCtx);
    if (evtCtx.trigger !== "setItem") {
      store.replaceExpanded(tExpanded.value || []);
    }
    return expanded;
  };
  var toggleExpanded = function toggleExpanded(item) {
    var node = getNode(store, item);
    if (!node.children) return;
    return setExpanded(node, !node.isExpanded());
  };
  var setActived = function setActived(item, isActived) {
    var node = getNode(store, item);
    var mouseEvent = treeState.mouseEvent;
    var evtCtx = {
      node: node.getModel(),
      e: mouseEvent,
      trigger: "setItem"
    };
    if (mouseEvent) {
      evtCtx.trigger = "node-click";
    }
    var actived = node.setActived(isActived, {
      isAction: evtCtx.trigger === "node-click",
      directly: true
    });
    setTActived(actived, evtCtx);
    if (evtCtx.trigger !== "setItem") {
      store.replaceActived(tActived.value || []);
    }
    return actived;
  };
  var toggleActived = function toggleActived(item) {
    var node = getNode(store, item);
    return setActived(node, !node.isActived());
  };
  var setChecked = function setChecked(item, isChecked, ctx) {
    var node = getNode(store, item);
    var mouseEvent = ctx === null || ctx === void 0 ? void 0 : ctx.e;
    var evtCtx = {
      node: node.getModel(),
      e: mouseEvent,
      trigger: "setItem"
    };
    if (mouseEvent) {
      evtCtx.trigger = "node-click";
    }
    var checked = node.setChecked(isChecked, {
      isAction: evtCtx.trigger === "node-click",
      directly: true
    });
    setTValue(checked, evtCtx);
    if (evtCtx.trigger !== "setItem") {
      store.replaceChecked(tValue.value || []);
    }
    return checked;
  };
  var toggleChecked = function toggleChecked(item, ctx) {
    var node = getNode(store, item);
    if (node.isIndeterminate()) {
      var expectState = node.hasEnableUnCheckedChild();
      return setChecked(node, expectState, ctx);
    }
    return setChecked(node, !node.isChecked(), ctx);
  };
  return {
    setExpanded: setExpanded,
    toggleExpanded: toggleExpanded,
    setActived: setActived,
    toggleActived: toggleActived,
    setChecked: setChecked,
    toggleChecked: toggleChecked
  };
}

export { useTreeAction as default };
//# sourceMappingURL=useTreeAction.mjs.map
