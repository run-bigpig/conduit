/**
 * tdesign v1.10.6
 * (c) 2024 tdesign
 * @license MIT
 */

import { _ as _defineProperty } from '../_chunks/dep-2cd917b7.mjs';
import { c as camelCase_1 } from '../_chunks/dep-9f3c7a03.mjs';
import { isVueNext } from './adapt.mjs';
import '../_chunks/dep-b36c56dd.mjs';
import '../_chunks/dep-c343de10.mjs';
import '../_chunks/dep-b1273bbc.mjs';
import '../_chunks/dep-5d6ad0f8.mjs';
import '../_chunks/dep-0c393202.mjs';
import '../_chunks/dep-da8c0faf.mjs';
import '../_chunks/dep-81a441b7.mjs';
import '../_chunks/dep-b9904594.mjs';
import '../_chunks/dep-8c4e0f42.mjs';
import '../_chunks/dep-5b0920c8.mjs';
import '../_chunks/dep-0d26b449.mjs';
import 'vue';
import '../utils/withInstall.mjs';
import '../hooks/useVModel.mjs';
import '../_chunks/dep-90feab0a.mjs';
import '../hooks/useDefaultValue.mjs';
import 'tdesign-icons-vue-next';
import '../checkbox/index.mjs';
import '../checkbox/checkbox.mjs';
import '../_chunks/dep-b250efbd.mjs';
import '../_chunks/dep-13773b3a.mjs';
import '../_chunks/dep-5639eb7d.mjs';
import '../checkbox/props.mjs';
import '../hooks/useRipple.mjs';
import '../hooks/useKeepAnimation.mjs';
import '../hooks/useConfig.mjs';
import '../config-provider/useConfig.mjs';
import '../_chunks/dep-e38b198c.mjs';
import '../_chunks/dep-05274cf8.mjs';
import '../_chunks/dep-d10845aa.mjs';
import '../_chunks/dep-5a707436.mjs';
import '../_chunks/dep-bc6946b4.mjs';
import '../_chunks/dep-a33ab1de.mjs';
import '../_chunks/dep-653fadb3.mjs';
import '../_chunks/dep-45bc846d.mjs';
import '../_chunks/dep-2bcf3734.mjs';
import '../_chunks/dep-5005acfb.mjs';
import '../_chunks/dep-c7111b68.mjs';
import '../_chunks/dep-aaf0a453.mjs';
import '../_chunks/dep-4e9148a5.mjs';
import '../_chunks/dep-754933cb.mjs';
import '../_chunks/dep-6d263d27.mjs';
import '../_chunks/dep-67e3536c.mjs';
import '../_chunks/dep-5d631aa0.mjs';
import '../_chunks/dep-eda9976d.mjs';
import '../_chunks/dep-f03d2f0f.mjs';
import '../_chunks/dep-94da3846.mjs';
import '../_chunks/dep-28ab9e3e.mjs';
import '../_chunks/dep-0d4a3f7e.mjs';
import '../_chunks/dep-bd1b86d0.mjs';
import '../_chunks/dep-37ea0644.mjs';
import '../_chunks/dep-1d4985f2.mjs';
import '../_chunks/dep-ace4b3db.mjs';
import '../_common/js/global-config/default-config.mjs';
import '../_common/js/global-config/locale/zh_CN.mjs';
import '../_chunks/dep-5101fc98.mjs';
import '../_chunks/dep-06adc476.mjs';
import '../_chunks/dep-eb1a861a.mjs';
import '../config-provider/type.mjs';
import '../utils/set-style.mjs';
import '../hooks/tnode.mjs';
import '../utils/render-tnode.mjs';
import '../_chunks/dep-fb32dbe0.mjs';
import '../checkbox/constants.mjs';
import '../checkbox/hooks/useCheckboxLazyLoad.mjs';
import '../_common/js/utils/observe.mjs';
import '../checkbox/hooks/useKeyboardEvent.mjs';
import '../_common/js/common.mjs';
import '../hooks/useDisabled.mjs';
import '../_chunks/dep-208ab852.mjs';
import '../hooks/useReadonly.mjs';
import '../checkbox/group.mjs';
import '../_chunks/dep-769cdfcc.mjs';
import '../_chunks/dep-145a173e.mjs';
import '../_chunks/dep-0b5c77ed.mjs';
import '../_chunks/dep-e331b803.mjs';
import '../_chunks/dep-860543c8.mjs';
import '../checkbox/checkbox-group-props.mjs';
import '../hooks/slot.mjs';
import './style/css.mjs';
import '../checkbox/type.mjs';
import '../loading/index.mjs';
import '../_chunks/dep-77ea84d8.mjs';
import '../_chunks/dep-1dda5d5d.mjs';
import '../_chunks/dep-4a6bdbd3.mjs';
import '../_chunks/dep-0df36f23.mjs';
import '../_chunks/dep-ff82207a.mjs';
import '../_chunks/dep-29715a4a.mjs';
import '../_chunks/dep-6502b585.mjs';
import '../loading/plugin.mjs';
import '../loading/loading.mjs';
import '../loading/icon/gradient.mjs';
import '../_common/js/loading/circle-adapter.mjs';
import '../_common/js/utils/set-style.mjs';
import '../_common/js/utils/helper.mjs';
import '../_chunks/dep-62613491.mjs';
import '../_chunks/dep-41afea2a.mjs';
import '../_chunks/dep-be7755a9.mjs';
import '../utils/dom.mjs';
import '../utils/easing.mjs';
import '../loading/props.mjs';
import '../hooks/useTeleport.mjs';
import '../loading/type.mjs';
import '../hooks/useGlobalIcon.mjs';
import '../hooks/useLazyLoad.mjs';
import '../hooks/useVirtualScrollNew.mjs';
import '../hooks/useResizeObserver.mjs';
import '../_chunks/dep-b523a7a1.mjs';
import '../_chunks/dep-5094012f.mjs';
import '../_chunks/dep-98a67207.mjs';
import '../_common/js/tree/tree-node.mjs';
import '../_chunks/dep-2ebd3a6b.mjs';
import '../_chunks/dep-4a07c5ff.mjs';
import '../_chunks/dep-f79b5614.mjs';
import '../_chunks/dep-7baeba65.mjs';
import '../_common/js/tree/tree-node-model.mjs';
import '../_chunks/dep-d2ce4e2b.mjs';
import '../_chunks/dep-78e0bb48.mjs';
import '../_chunks/dep-78a897b3.mjs';
import '../_common/js/log/log.mjs';
import '../_common/js/log/index.mjs';

function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
function emitEvent(props, context, evtName) {
  var apiName = camelCase_1("on-".concat(evtName));
  evtName.replace(/^on/, "").toLowerCase();
  for (var _len = arguments.length, args = new Array(_len > 3 ? _len - 3 : 0), _key = 3; _key < _len; _key++) {
    args[_key - 3] = arguments[_key];
  }
  if (typeof props[apiName] === "function") {
    props[apiName].apply(props, args);
  }
  if (!isVueNext) {
    context.emit.apply(context, [evtName].concat(args));
  }
}
function getParentsToRoot(element, root) {
  var list = [];
  var el = element;
  while (el && el.parentNode) {
    list.push(el);
    if (el === root) {
      break;
    }
    el = el.parentNode;
  }
  return list;
}
function getParentMarks(name, element, root) {
  var list = getParentsToRoot(element, root);
  return list.map(function (el) {
    var mark = {
      name: name,
      value: (el === null || el === void 0 ? void 0 : el.getAttribute(name)) || "",
      el: el
    };
    return mark;
  }).filter(function (mark) {
    return mark.value;
  });
}
function getMark(name, element, root) {
  var list = getParentMarks(name, element, root);
  var info = list.pop() || null;
  return info;
}
function pathMatchClass(name, element, root) {
  var list = getParentsToRoot(element, root);
  var rs = list.some(function (el) {
    return el.classList.contains(name);
  });
  return rs;
}
function getTNode(prop, options) {
  var tnode = null;
  var item = null;
  var conf = _objectSpread({}, options);
  if (typeof prop === "function") {
    var _conf$node;
    item = prop(conf.createElement, (_conf$node = conf.node) === null || _conf$node === void 0 ? void 0 : _conf$node.getModel());
  } else if (typeof prop === "string") {
    item = prop;
  }
  if (typeof item === "string") {
    tnode = item;
  } else if (item) {
    tnode = item;
  }
  return tnode;
}
function getLineModel(nodes, node, index) {
  var lineModel = {
    top: false,
    right: false,
    bottom: false,
    left: false
  };
  var nodeChildren = [];
  if (Array.isArray(node.children)) {
    nodeChildren = node.children;
  }
  var childNode = nodes[index - 1] || null;
  var nodeItemIndex = childNode ? childNode.getIndex() : 0;
  if (index === 0) {
    lineModel.left = !!node.parent;
    lineModel.bottom = node.children && node.expanded;
    lineModel.right = node.parent && !node.children;
  } else if (index === 1) {
    lineModel.top = true;
    lineModel.right = true;
    lineModel.bottom = nodeItemIndex < nodeChildren.length - 1;
  } else if (nodeItemIndex < nodeChildren.length - 1) {
    lineModel.top = true;
    lineModel.bottom = true;
  }
  return lineModel;
}
function isTreeNodeValue(item) {
  return typeof item === "string" || typeof item === "number";
}
function getNode(store, item) {
  var node = null;
  var val = null;
  if (typeof item === "string" || typeof item === "number") {
    val = item;
  } else if (item && isTreeNodeValue(item.value)) {
    val = item.value;
  }
  node = store.getNode(val);
  return node;
}

export { emitEvent, getLineModel, getMark, getNode, getParentMarks, getParentsToRoot, getTNode, isTreeNodeValue, pathMatchClass };
//# sourceMappingURL=util.mjs.map
